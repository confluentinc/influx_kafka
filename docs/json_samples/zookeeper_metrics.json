{
  "request": {
    "type": "list"
  },
  "value": {
    "JMImplementation": {
      "type=MBeanServerDelegate": {
        "attr": {
          "ImplementationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation name (the name of this product)"
          },
          "MBeanServerId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The MBean server agent identification"
          },
          "ImplementationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation version (the version of this product)."
          },
          "SpecificationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The version of the JMX specification implemented by this product."
          },
          "SpecificationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The vendor of the JMX specification implemented by this product."
          },
          "SpecificationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The full name of the JMX specification implemented by this product."
          },
          "ImplementationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "the JMX implementation vendor (the vendor of this product)."
          }
        },
        "class": "javax.management.MBeanServerDelegate",
        "desc": "Represents  the MBean server from the management point of view."
      }
    },
    "java.util.logging": {
      "type=Logging": {
        "op": {
          "getLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getLoggerLevel"
          },
          "getParentLoggerName": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getParentLoggerName"
          },
          "setLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setLoggerLevel"
          }
        },
        "attr": {
          "LoggerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "LoggerNames"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jdk.management.jfr": {
      "type=FlightRecorder": {
        "op": {
          "getRecordingOptions": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "getRecordingOptions"
          },
          "takeSnapshot": {
            "args": [],
            "ret": "long",
            "desc": "takeSnapshot"
          },
          "closeRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "closeRecording"
          },
          "newRecording": {
            "args": [],
            "ret": "long",
            "desc": "newRecording"
          },
          "setRecordingSettings": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setRecordingSettings"
          },
          "openStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "long",
            "desc": "openStream"
          },
          "cloneRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "long",
            "desc": "cloneRecording"
          },
          "setRecordingOptions": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setRecordingOptions"
          },
          "copyTo": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "copyTo"
          },
          "startRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "startRecording"
          },
          "closeStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "closeStream"
          },
          "getRecordingSettings": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "getRecordingSettings"
          },
          "setPredefinedConfiguration": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setPredefinedConfiguration"
          },
          "readStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "[B",
            "desc": "readStream"
          },
          "setConfiguration": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setConfiguration"
          },
          "stopRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "boolean",
            "desc": "stopRecording"
          }
        },
        "attr": {
          "EventTypes": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "EventTypes"
          },
          "Recordings": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Recordings"
          },
          "Configurations": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Configurations"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "jdk.management.jfr.FlightRecorderMXBeanImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.lang": {
      "name=G1 Survivor Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Threading": {
        "op": {
          "getThreadCpuTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadCpuTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadCpuTime"
            }
          ],
          "getThreadInfo": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                },
                {
                  "name": "p3",
                  "type": "int",
                  "desc": "p3"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            }
          ],
          "findDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findDeadlockedThreads"
          },
          "getThreadAllocatedBytes": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadAllocatedBytes"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadAllocatedBytes"
            }
          ],
          "getThreadUserTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadUserTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadUserTime"
            }
          ],
          "findMonitorDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findMonitorDeadlockedThreads"
          },
          "resetPeakThreadCount": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakThreadCount"
          },
          "dumpAllThreads": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "boolean",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "dumpAllThreads"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "boolean",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "int",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "dumpAllThreads"
            }
          ]
        },
        "attr": {
          "ThreadAllocatedMemorySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadAllocatedMemorySupported"
          },
          "ThreadContentionMonitoringEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringEnabled"
          },
          "TotalStartedThreadCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalStartedThreadCount"
          },
          "CurrentThreadUserTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadUserTime"
          },
          "CurrentThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CurrentThreadCpuTimeSupported"
          },
          "AllThreadIds": {
            "rw": false,
            "type": "[J",
            "desc": "AllThreadIds"
          },
          "PeakThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "PeakThreadCount"
          },
          "ThreadAllocatedMemoryEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadAllocatedMemoryEnabled"
          },
          "CurrentThreadCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadCpuTime"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "ThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadCpuTimeSupported"
          },
          "ThreadContentionMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringSupported"
          },
          "ThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "ThreadCount"
          },
          "ThreadCpuTimeEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadCpuTimeEnabled"
          },
          "ObjectMonitorUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ObjectMonitorUsageSupported"
          },
          "SynchronizerUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "SynchronizerUsageSupported"
          },
          "DaemonThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "DaemonThreadCount"
          }
        },
        "class": "com.sun.management.internal.HotSpotThreadImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Memory": {
        "op": {
          "gc": {
            "args": [],
            "ret": "void",
            "desc": "gc"
          }
        },
        "attr": {
          "ObjectPendingFinalizationCount": {
            "rw": false,
            "type": "int",
            "desc": "ObjectPendingFinalizationCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "HeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "HeapMemoryUsage"
          },
          "NonHeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "NonHeapMemoryUsage"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Eden Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=OperatingSystem": {
        "attr": {
          "OpenFileDescriptorCount": {
            "rw": false,
            "type": "long",
            "desc": "OpenFileDescriptorCount"
          },
          "CommittedVirtualMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "CommittedVirtualMemorySize"
          },
          "FreePhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "FreePhysicalMemorySize"
          },
          "SystemLoadAverage": {
            "rw": false,
            "type": "double",
            "desc": "SystemLoadAverage"
          },
          "Arch": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Arch"
          },
          "ProcessCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "ProcessCpuLoad"
          },
          "FreeSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "FreeSwapSpaceSize"
          },
          "TotalPhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "TotalPhysicalMemorySize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "TotalSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "TotalSwapSpaceSize"
          },
          "ProcessCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "ProcessCpuTime"
          },
          "MaxFileDescriptorCount": {
            "rw": false,
            "type": "long",
            "desc": "MaxFileDescriptorCount"
          },
          "SystemCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "SystemCpuLoad"
          },
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "AvailableProcessors": {
            "rw": false,
            "type": "int",
            "desc": "AvailableProcessors"
          }
        },
        "class": "com.sun.management.internal.OperatingSystemImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeCacheManager,type=MemoryManager": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryManagerImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'non-nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Old Gen,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Compressed Class Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Old Generation,type=GarbageCollector": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "com.sun.management.internal.GarbageCollectorExtImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'non-profiled nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=ClassLoading": {
        "attr": {
          "LoadedClassCount": {
            "rw": false,
            "type": "int",
            "desc": "LoadedClassCount"
          },
          "UnloadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "UnloadedClassCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "TotalLoadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalLoadedClassCount"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ClassLoadingImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'profiled nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Compilation": {
        "attr": {
          "CompilationTimeMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CompilationTimeMonitoringSupported"
          },
          "TotalCompilationTime": {
            "rw": false,
            "type": "long",
            "desc": "TotalCompilationTime"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.CompilationImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Young Generation,type=GarbageCollector": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "com.sun.management.internal.GarbageCollectorExtImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace Manager,type=MemoryManager": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryManagerImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Runtime": {
        "attr": {
          "SpecVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVendor"
          },
          "ClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClassPath"
          },
          "InputArguments": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "InputArguments"
          },
          "Uptime": {
            "rw": false,
            "type": "long",
            "desc": "Uptime"
          },
          "VmName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmName"
          },
          "StartTime": {
            "rw": false,
            "type": "long",
            "desc": "StartTime"
          },
          "Pid": {
            "rw": false,
            "type": "long",
            "desc": "Pid"
          },
          "VmVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVersion"
          },
          "SpecName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecName"
          },
          "ManagementSpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ManagementSpecVersion"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "VmVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVendor"
          },
          "LibraryPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LibraryPath"
          },
          "BootClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BootClassPath"
          },
          "SpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVersion"
          },
          "SystemProperties": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "SystemProperties"
          },
          "BootClassPathSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "BootClassPathSupported"
          }
        },
        "class": "sun.management.RuntimeImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "com.sun.management": {
      "type=HotSpotDiagnostic": {
        "op": {
          "setVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setVMOption"
          },
          "getVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "getVMOption"
          },
          "dumpHeap": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "dumpHeap"
          }
        },
        "attr": {
          "DiagnosticOptions": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "DiagnosticOptions"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "com.sun.management.internal.HotSpotDiagnostic",
        "desc": "Information on the management interface of the MBean"
      },
      "type=DiagnosticCommand": {
        "op": {
          "vmUptime": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM uptime."
          },
          "jfrDump": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Copies contents of a JFR recording to file. Either the name or the recording id must be specified."
          },
          "jfrStart": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Starts a new JFR recording"
          },
          "gcClassStats": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about Java class meta data."
          },
          "threadPrint": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print all threads with stacktraces."
          },
          "jfrStop": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Stops a JFR recording"
          },
          "compilerCodelist": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all compiled methods in code cache that are alive"
          },
          "jfrCheck": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Checks running JFR recording(s)"
          },
          "vmSymboltable": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dump symbol table."
          },
          "gcRun": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.gc()."
          },
          "vmClassloaders": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints classloader hierarchy."
          },
          "vmMetaspace": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints the statistics for the metaspace"
          },
          "compilerDirectivesPrint": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all active compiler directives."
          },
          "vmSetFlag": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sets VM flag option using the provided value."
          },
          "compilerDirectivesAdd": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Add compiler directives from file."
          },
          "vmDynlibs": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print loaded dynamic libraries."
          },
          "vmPrintTouchedMethods": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all methods that have ever been touched during the lifetime of this JVM."
          },
          "compilerCodecache": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print code cache layout and bounds."
          },
          "vmNativeMemory": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print native memory usage"
          },
          "gcClassHistogram": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about the Java heap usage."
          },
          "gcRunFinalization": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.runFinalization()."
          },
          "jvmtiDataDump": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Signal the JVM to do a data-dump request for JVMTI."
          },
          "gcFinalizerInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide information about Java finalization queue."
          },
          "vmStringtable": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dump string table."
          },
          "help": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "For more information about a specific command use 'help <command>'. With no argument this will show a list of available commands. 'help all' will show help for all commands."
          },
          "jfrConfigure": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Configure JFR"
          },
          "vmSystemProperties": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print system properties."
          },
          "compilerDirectivesClear": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Remove all compiler directives."
          },
          "vmSystemdictionary": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints the statistics for dictionary hashtable sizes and bucket length"
          },
          "vmClassloaderStats": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print statistics about all ClassLoaders."
          },
          "compilerDirectivesRemove": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Remove latest added compiler directive."
          },
          "gcHeapInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide generic Java heap information."
          },
          "compilerCodeHeapAnalytics": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print CodeHeap analytics"
          },
          "vmVersion": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print JVM version information."
          },
          "vmInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print information about JVM environment and status."
          },
          "compilerQueue": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print methods queued for compilation."
          },
          "vmFlags": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM flag options and their current values."
          },
          "vmLog": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Lists current log configuration, enables\/disables\/configures a log output, or rotates all logs."
          },
          "jvmtiAgentLoad": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Load JVMTI native agent."
          },
          "vmClassHierarchy": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print a list of all loaded classes, indented to show the class hiearchy. The name of each class is followed by the ClassLoaderData* of its ClassLoader, or \"null\" if loaded by the bootstrap class loader."
          },
          "vmCommandLine": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print the command line used to start this VM instance."
          }
        },
        "class": "com.sun.management.internal.DiagnosticCommandImpl",
        "desc": "Diagnostic Commands"
      }
    },
    "jmx4perl": {
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "class": "org.jolokia.backend.Config",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.nio": {
      "name=direct,type=BufferPool": {
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$1",
        "desc": "Information on the management interface of the MBean"
      },
      "name=mapped,type=BufferPool": {
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$1",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "org.apache.ZooKeeperService": {
      "name0=StandaloneServer_port2181,name1=InMemoryDataTree": {
        "op": {
          "approximateDataSize": {
            "args": [],
            "ret": "long",
            "desc": "approximateDataSize"
          },
          "countEphemerals": {
            "args": [],
            "ret": "int",
            "desc": "countEphemerals"
          }
        },
        "attr": {
          "WatchCount": {
            "rw": false,
            "type": "int",
            "desc": "WatchCount"
          },
          "NodeCount": {
            "rw": false,
            "type": "int",
            "desc": "NodeCount"
          },
          "LastZxid": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LastZxid"
          }
        },
        "class": "org.apache.zookeeper.server.DataTreeBean",
        "desc": "Information on the management interface of the MBean"
      },
      "name0=StandaloneServer_port2181": {
        "op": {
          "resetLatency": {
            "args": [],
            "ret": "void",
            "desc": "resetLatency"
          },
          "resetMaxLatency": {
            "args": [],
            "ret": "void",
            "desc": "resetMaxLatency"
          },
          "resetFsyncThresholdExceedCount": {
            "args": [],
            "ret": "void",
            "desc": "resetFsyncThresholdExceedCount"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "resetStatistics"
          }
        },
        "attr": {
          "PacketsReceived": {
            "rw": false,
            "type": "long",
            "desc": "PacketsReceived"
          },
          "PacketsSent": {
            "rw": false,
            "type": "long",
            "desc": "PacketsSent"
          },
          "MaxSessionTimeout": {
            "rw": true,
            "type": "int",
            "desc": "MaxSessionTimeout"
          },
          "AvgRequestLatency": {
            "rw": false,
            "type": "long",
            "desc": "AvgRequestLatency"
          },
          "NumAliveConnections": {
            "rw": false,
            "type": "long",
            "desc": "NumAliveConnections"
          },
          "TickTime": {
            "rw": true,
            "type": "int",
            "desc": "TickTime"
          },
          "MaxRequestLatency": {
            "rw": false,
            "type": "long",
            "desc": "MaxRequestLatency"
          },
          "JuteMaxBufferSize": {
            "rw": false,
            "type": "int",
            "desc": "JuteMaxBufferSize"
          },
          "StartTime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "StartTime"
          },
          "ClientPort": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClientPort"
          },
          "OutstandingRequests": {
            "rw": false,
            "type": "long",
            "desc": "OutstandingRequests"
          },
          "MinClientResponseSize": {
            "rw": false,
            "type": "int",
            "desc": "MinClientResponseSize"
          },
          "MaxClientCnxnsPerHost": {
            "rw": true,
            "type": "int",
            "desc": "MaxClientCnxnsPerHost"
          },
          "DataDirSize": {
            "rw": false,
            "type": "long",
            "desc": "DataDirSize"
          },
          "LastClientResponseSize": {
            "rw": false,
            "type": "int",
            "desc": "LastClientResponseSize"
          },
          "FsyncThresholdExceedCount": {
            "rw": false,
            "type": "long",
            "desc": "FsyncThresholdExceedCount"
          },
          "MinRequestLatency": {
            "rw": false,
            "type": "long",
            "desc": "MinRequestLatency"
          },
          "SecureClientAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SecureClientAddress"
          },
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "MinSessionTimeout": {
            "rw": true,
            "type": "int",
            "desc": "MinSessionTimeout"
          },
          "TxnLogElapsedSyncTime": {
            "rw": false,
            "type": "long",
            "desc": "TxnLogElapsedSyncTime"
          },
          "MaxClientResponseSize": {
            "rw": false,
            "type": "int",
            "desc": "MaxClientResponseSize"
          },
          "SecureClientPort": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SecureClientPort"
          },
          "LogDirSize": {
            "rw": false,
            "type": "long",
            "desc": "LogDirSize"
          }
        },
        "class": "org.apache.zookeeper.server.ZooKeeperServerBean",
        "desc": "Information on the management interface of the MBean"
      },
      "name0=StandaloneServer_port2181,name1=Connections,name2=172.17.0.1,name3=0x1001d8e0f590028": {
        "op": {
          "resetCounters": {
            "args": [],
            "ret": "void",
            "desc": "resetCounters"
          },
          "terminateSession": {
            "args": [],
            "ret": "void",
            "desc": "terminateSession"
          },
          "terminateConnection": {
            "args": [],
            "ret": "void",
            "desc": "terminateConnection"
          }
        },
        "attr": {
          "PacketsReceived": {
            "rw": false,
            "type": "long",
            "desc": "PacketsReceived"
          },
          "PacketsSent": {
            "rw": false,
            "type": "long",
            "desc": "PacketsSent"
          },
          "LastResponseTime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LastResponseTime"
          },
          "EphemeralNodes": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "EphemeralNodes"
          },
          "OutstandingRequests": {
            "rw": false,
            "type": "long",
            "desc": "OutstandingRequests"
          },
          "LastZxid": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LastZxid"
          },
          "LastCxid": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LastCxid"
          },
          "SourceIP": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SourceIP"
          },
          "SessionTimeout": {
            "rw": false,
            "type": "int",
            "desc": "SessionTimeout"
          },
          "MinLatency": {
            "rw": false,
            "type": "long",
            "desc": "MinLatency"
          },
          "AvgLatency": {
            "rw": false,
            "type": "long",
            "desc": "AvgLatency"
          },
          "LastOperation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LastOperation"
          },
          "StartedTime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "StartedTime"
          },
          "LastLatency": {
            "rw": false,
            "type": "long",
            "desc": "LastLatency"
          },
          "SessionId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SessionId"
          },
          "MaxLatency": {
            "rw": false,
            "type": "long",
            "desc": "MaxLatency"
          }
        },
        "class": "org.apache.zookeeper.server.ConnectionBean",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jolokia": {
      "type=Discovery": {
        "op": {
          "lookupAgentsWithTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "lookupAgents": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          }
        },
        "class": "org.jolokia.discovery.JolokiaDiscovery",
        "desc": "Information on the management interface of the MBean"
      },
      "type=ServerHandler": {
        "op": {
          "mBeanServersInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "class": "org.jolokia.backend.MBeanServerHandler",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "class": "org.jolokia.backend.Config",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "log4j": {
      "logger=org.apache.zookeeper.jmx.ManagedUtil": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.zookeeper.server.ZooKeeperServerMain": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.zookeeper.jmx.MBeanRegistry": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.zookeeper.server.quorum.QuorumPeerConfig": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.log4j.jmx.HierarchyDynamicMBean": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.log4j.jmx.LoggerDynamicMBean": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=root": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "appender=stdout": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The stdout appender."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "appender=stdout,layout=org.apache.log4j.PatternLayout": {
        "op": {
          "activateOptions": {
            "args": [],
            "ret": "void",
            "desc": "activateOptions(): add an layout"
          }
        },
        "attr": {
          "conversionPattern": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Dynamic"
          },
          "footer": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Dynamic"
          },
          "header": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Dynamic"
          },
          "contentType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Dynamic"
          }
        },
        "class": "org.apache.log4j.jmx.LayoutDynamicMBean",
        "desc": "This MBean acts as a management facade for log4j layouts."
      },
      "logger=org.apache.log4j.jmx.AppenderDynamicMBean": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.zookeeper.server.DatadirCleanupManager": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "logger=org.apache.zookeeper.server.quorum.QuorumPeerMain": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "appender=stdout": {
        "op": {
          "activateOptions": {
            "args": [],
            "ret": "void",
            "desc": "activateOptions(): add an appender"
          },
          "setLayout": {
            "args": [
              {
                "name": "layout class",
                "type": "java.lang.String",
                "desc": "layout class"
              }
            ],
            "ret": "void",
            "desc": "setLayout(): add a layout"
          }
        },
        "attr": {
          "appender=stdout,layout=org.apache.log4j.PatternLayout": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The stdout,layout=org.apache.log4j.PatternLayout layout."
          },
          "name": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Dynamic"
          },
          "threshold": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Dynamic"
          },
          "encoding": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Dynamic"
          },
          "follow": {
            "rw": true,
            "type": "boolean",
            "desc": "Dynamic"
          },
          "immediateFlush": {
            "rw": true,
            "type": "boolean",
            "desc": "Dynamic"
          },
          "target": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Dynamic"
          }
        },
        "class": "org.apache.log4j.jmx.AppenderDynamicMBean",
        "desc": "This MBean acts as a management facade for log4j appenders."
      },
      "logger=org.apache.log4j.jmx.LayoutDynamicMBean": {
        "op": {
          "addAppender": {
            "args": [
              {
                "name": "class name",
                "type": "java.lang.String",
                "desc": "add an appender to this logger"
              },
              {
                "name": "appender name",
                "type": "java.lang.String",
                "desc": "name of the appender"
              }
            ],
            "ret": "void",
            "desc": "addAppender(): add an appender"
          }
        },
        "attr": {
          "name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of this Logger."
          },
          "priority": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The priority of this logger."
          }
        },
        "class": "org.apache.log4j.jmx.LoggerDynamicMBean",
        "desc": "This MBean acts as a management facade for a org.apache.log4j.Logger instance."
      },
      "hierarchy=default": {
        "op": {
          "addLoggerMBean": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": "Create a logger MBean"
              }
            ],
            "ret": "javax.management.ObjectName",
            "desc": "addLoggerMBean(): add a loggerMBean"
          }
        },
        "attr": {
          "logger=org.apache.zookeeper.jmx.ManagedUtil": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.zookeeper.jmx.ManagedUtil logger."
          },
          "logger=org.apache.zookeeper.server.ZooKeeperServerMain": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.zookeeper.server.ZooKeeperServerMain logger."
          },
          "logger=org.apache.zookeeper.jmx.MBeanRegistry": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.zookeeper.jmx.MBeanRegistry logger."
          },
          "logger=org.apache.zookeeper.server.quorum.QuorumPeerConfig": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.zookeeper.server.quorum.QuorumPeerConfig logger."
          },
          "logger=org.apache.log4j.jmx.AppenderDynamicMBean": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.log4j.jmx.AppenderDynamicMBean logger."
          },
          "logger=org.apache.zookeeper.server.DatadirCleanupManager": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.zookeeper.server.DatadirCleanupManager logger."
          },
          "threshold": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The \"threshold\" state of the hiearchy."
          },
          "logger=org.apache.zookeeper.server.quorum.QuorumPeerMain": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.zookeeper.server.quorum.QuorumPeerMain logger."
          },
          "logger=org.apache.log4j.jmx.HierarchyDynamicMBean": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.log4j.jmx.HierarchyDynamicMBean logger."
          },
          "logger=root": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The root logger."
          },
          "logger=org.apache.log4j.jmx.LoggerDynamicMBean": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.log4j.jmx.LoggerDynamicMBean logger."
          },
          "logger=org.apache.log4j.jmx.LayoutDynamicMBean": {
            "rw": true,
            "type": "javax.management.ObjectName",
            "desc": "The org.apache.log4j.jmx.LayoutDynamicMBean logger."
          }
        },
        "class": "org.apache.log4j.jmx.HierarchyDynamicMBean",
        "desc": "This MBean acts as a management facade for org.apache.log4j.Hierarchy."
      }
    }
  },
  "timestamp": 1603875169,
  "status": 200
}