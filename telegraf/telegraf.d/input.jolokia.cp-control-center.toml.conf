########## Control Center ##########
[[inputs.jolokia2_agent]]

  # Add agents URLs to query
  urls = ["http://127.0.0.1:58777/jolokia"]
  # username = ""
  # password = ""
  # response_timeout = "5s"

  # Optional TLS config
  #tls_ca   = "/var/private/ca.pem"
  #tls_cert = "/var/private/client.pem"
  #tls_key  = "/var/private/client-key.pem"
  #insecure_skip_verify = false

  #name_prefix = ""
  #default_tag_prefix      = ""
  #default_field_prefix    = ""
  default_field_separator = "."
  
  tagexclude = ["jolokia_agent_url"]
  fielddrop = ["Name"]

  # Jolokia Metric Configuration
  # Each metric declaration generates a Jolokia request to fetch telemetry from a JMX MBean.
  #   - mbean: [required] The object name of a JMX MBean. MBean property-key values can contain a wildcard *, allowing
  #       you to fetch multiple MBeans with one declaration.
  #   - paths: A list of MBean attributes to read.
  #   - tag_keys: A list of MBean property-key names to convert into tags. The property-key name becomes the tag name,
  #       while the property-key value becomes the tag value.
  #   - tag_prefix: A string to prepend to the tag names produced by this metric declaration.
  #   - field_name: A string to set as the name of the field produced by this metric; can contain substitutions.
  #   - field_prefix: A string to prepend to the field names produced by this metric declaration; can contain
  #       substitutions.

  ##### java.lang #####

  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Runtime"
    mbean = "java.lang:type=Runtime"
    paths = ["Uptime","StartTime"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Compilation"
    mbean = "java.lang:type=Compilation"
    paths = ["TotalCompilationTime"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_ClassLoading"
    mbean = "java.lang:type=ClassLoading"
    paths = ["LoadedClassCount","UnloadedClassCount","TotalLoadedClassCount"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Threading"
    mbean = "java.lang:type=Threading"
    paths = ["TotalStartedThreadCount","CurrentThreadUserTime","PeakThreadCount","CurrentThreadCpuTime","ThreadCount","DaemonThreadCount"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Memory"
    mbean = "java.lang:type=Memory"
    paths = ["ObjectPendingFinalizationCount","HeapMemoryUsage","NonHeapMemoryUsage"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_OperatingSystem"
    mbean = "java.lang:type=OperatingSystem"
    paths = ["OpenFileDescriptorCount","CommittedVirtualMemorySize","FreePhysicalMemorySize","SystemLoadAverage","ProcessCpuLoad","FreeSwapSpaceSize","TotalPhysicalMemorySize","TotalSwapSpaceSize","ProcessCpuTime","MaxFileDescriptorCount","SystemCpuLoad","AvailableProcessors"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_MemoryPool"
    mbean = "java.lang:name=*,type=MemoryPool"
    paths = ["Usage","PeakUsage","CollectionUsage"]
    tag_keys = ["name"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_GarbageCollector"
    mbean = "java.lang:name=*,type=GarbageCollector"
    paths = ["LastGcInfo","CollectionTime","CollectionCount"]
    tag_keys = ["name"]


  ##### java.nio #####
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.nio_BufferPool"
    mbean = "java.nio:name=*,type=BufferPool"
    paths = ["TotalCapacity","MemoryUsed","Count"]
    tag_keys = ["name"]


  ##### org.eclipse.jetty.io #####

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.io_arraybytebufferpool"
    mbean = "org.eclipse.jetty.io:context=*,id=*,type=arraybytebufferpool"
    tag_keys = ["context","id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.io_mappedbytebufferpool"
    mbean = "org.eclipse.jetty.io:context=*,id=*,type=mappedbytebufferpool"
    tag_keys = ["context","id"]


  ##### org.eclipse.jetty.server #####

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server_slf4jrequestlog"
    mbean = "org.eclipse.jetty.server:id=*,type=slf4jrequestlog"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server_slf4jrequestlogwriter"
    mbean = "org.eclipse.jetty.server:id=*,type=slf4jrequestlogwriter"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server_httpconfiguration"
    mbean = "org.eclipse.jetty.server:context=*,id=*,type=httpconfiguration"
    tag_keys = ["context","id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server_httpconnectionfactory"
    mbean = "org.eclipse.jetty.server:context=*,id=*,type=httpconnectionfactory"
    tag_keys = ["context","id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server_networktrafficserverconnector"
    mbean = "org.eclipse.jetty.server:context=*,id=*,type=networktrafficserverconnector"
    tag_keys = ["context","id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server_serverconnector__serverconnectormanager"
    mbean = "org.eclipse.jetty.server:context=*,id=*,type=serverconnector$serverconnectormanager"
    paths = ["scheduler","stopTimeout","selectorCount","connectTimeout","state"]
    tag_keys = ["context","id"]


  ##### org.eclipse.jetty.server.session #####

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server.session_defaultsessionidmanager"
    mbean = "org.eclipse.jetty.server.session:id=*,type=defaultsessionidmanager"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server.session_housekeeper"
    mbean = "org.eclipse.jetty.server.session:id=*,type=housekeeper"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server.session_defaultsessioncache"
    mbean = "org.eclipse.jetty.server.session:context=*,id=*,type=defaultsessioncache"
    tag_keys = ["context","id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server.session_nullsessiondatastore"
    mbean = "org.eclipse.jetty.server.session:context=*,id=*,type=nullsessiondatastore"
    tag_keys = ["context","id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.server.session_sessionhandler"
    mbean = "org.eclipse.jetty.server.session:context=*,id=*,type=sessionhandler"
    paths = ["stopTimeout","sessionTimeMean","secureCookies","checkingRemoteSessionIdEncoding","sessionCookie","sessionIdPathParameterName","sessionTimeTotal","refreshCookieAge","sessionTimeMax","maxCookieAge","maxInactiveInterval","state","httpOnly","sessionPath","sessionDomain","sessionsCreated","sessionTimeStdDev"]
    tag_keys = ["context","id"]


  ##### org.eclipse.jetty.servlet #####

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.servlet_servletcontexthandler"
    mbean = "org.eclipse.jetty.servlet:context=*,id=*,type=servletcontexthandler"
    paths = ["virtualHosts","stopTimeout","maxFormContentSize","contextPath","allowNullPathInfo","welcomeFiles","state","shutdown"]
    tag_keys = ["context","id"]


  ##### org.eclipse.jetty.util.thread #####

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.util.thread_queuedthreadpool"
    mbean = "org.eclipse.jetty.util.thread:id=*,type=queuedthreadpool"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.util.thread_reservedthreadexecutor"
    mbean = "org.eclipse.jetty.util.thread:id=*,type=reservedthreadexecutor"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.util.thread_scheduledexecutorscheduler"
    mbean = "org.eclipse.jetty.util.thread:context=*,id=*,type=scheduledexecutorscheduler"
    tag_keys = ["context","id"]


  ##### org.eclipse.jetty.util.thread.strategy #####

  [[inputs.jolokia2_agent.metric]]
    name = "org.eclipse.jetty.util.thread.strategy_eatwhatyoukill"
    mbean = "org.eclipse.jetty.util.thread.strategy:context=*,id=*,type=eatwhatyoukill"
    tag_keys = ["context","id"]


  ##### io.confluent.rest #####

  [[inputs.jolokia2_agent.metric]]
    name = "io.confluent.rest_application__1"
    mbean = "io.confluent.rest:id=*,type=application$1"
    paths = ["stopTimeout","dumpBeforeStop","startupTime","dumpAfterStart","state"]
    tag_keys = ["id"]


  ##### kafka.producer #####

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.producer_app-info"
    mbean = "kafka.producer:id=*,type=app-info"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.producer_app-info"
    mbean = "kafka.producer:client-id=*,type=app-info"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.producer_kafka-metrics-count"
    mbean = "kafka.producer:client-id=*,type=kafka-metrics-count"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.producer_producer-metrics"
    mbean = "kafka.producer:client-id=*,type=producer-metrics"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.producer_producer-node-metrics"
    mbean = "kafka.producer:client-id=*,node-id=*,type=producer-node-metrics"
    tag_keys = ["client-id","node-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.producer_producer-topic-metrics"
    mbean = "kafka.producer:client-id=*,topic=*,type=producer-topic-metrics"
    tag_keys = ["client-id","topic"]
    

  ##### kafka.consumer #####

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_app-info"
    mbean = "kafka.consumer:id=*,type=app-info"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_app-info"
    mbean = "kafka.consumer:client-id=*,type=app-info"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_consumer-coordinator-metrics"
    mbean = "kafka.consumer:client-id=*,type=consumer-coordinator-metrics"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_consumer-metrics"
    mbean = "kafka.consumer:client-id=*,type=consumer-metrics"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_kafka-metrics-count"
    mbean = "kafka.consumer:client-id=*,type=kafka-metrics-count"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_consumer-node-metrics"
    mbean = "kafka.consumer:client-id=*,node-id=*,type=consumer-node-metrics"
    tag_keys = ["client-id","node-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_consumer-fetch-manager-metrics"
    mbean = "kafka.consumer:client-id=*,type=consumer-fetch-manager-metrics"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_consumer-fetch-manager-metrics_topic"
    mbean = "kafka.consumer:client-id=*,topic=*,type=consumer-fetch-manager-metrics"
    tag_keys = ["client-id","topic"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.consumer_consumer-fetch-manager-metrics_partition"
    mbean = "kafka.consumer:client-id=*,partition=*,topic=*,type=consumer-fetch-manager-metrics"
    tag_keys = ["client-id","topic", "partition"]
    

  ##### rest-utils #####

  [[inputs.jolokia2_agent.metric]]
    name = "rest-utils_jersey-metrics"
    mbean = "rest-utils:type=jersey-metrics"

  [[inputs.jolokia2_agent.metric]]
    name = "rest-utils_jetty-metrics"
    mbean = "rest-utils:type=jetty-metrics"
    

  ##### kafka.admin.client #####

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.admin.client_app-info"
    mbean = "kafka.admin.client:id=*,type=app-info"
    tag_keys = ["id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.admin.client_app-info"
    mbean = "kafka.admin.client:client-id=*,type=app-info"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.admin.client_admin-client-metrics"
    mbean = "kafka.admin.client:client-id=*,type=admin-client-metrics"
    tag_keys = ["client-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.admin.client_admin-client-node-metrics"
    mbean = "kafka.admin.client:client-id=*,node-id=*,type=admin-client-node-metrics"
    tag_keys = ["client-id","node-id"]

  [[inputs.jolokia2_agent.metric]]
    name = "kafka.admin.client_kafka-metrics-count"
    mbean = "kafka.admin.client:client-id=*,type=kafka-metrics-count"
    tag_keys = ["client-id"]
    

  ##### kafka.streams #####
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_kafka-metrics-count"
    mbean = "kafka.streams:type=kafka-metrics-count"
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-metrics"
    mbean = "kafka.streams:client-id=*,type=stream-metrics"
    tag_keys = ["client-id"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-task-metrics"
    mbean = "kafka.streams:client-id=*,task-id=*,type=stream-task-metrics"
    tag_keys = ["client-id","task-id"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-record-cache-metrics"
    mbean = "kafka.streams:client-id=*,record-cache-id=*,task-id=*,type=stream-record-cache-metrics"
    tag_keys = ["client-id","record-cache-id","task-id"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-processor-node-metrics"
    mbean = "kafka.streams:client-id=*,processor-node-id=*,task-id=*,type=stream-processor-node-metrics"
    tag_keys = ["client-id","processor-node-id","task-id"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-rocksdb-window-state-metrics"
    mbean = "kafka.streams:client-id=*,rocksdb-window-state-id=*,task-id=*,type=stream-rocksdb-window-state-metrics"
    tag_keys = ["client-id","rocksdb-window-state-id","task-id"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-rocksdb-state-metrics"
    mbean = "kafka.streams:client-id=*,rocksdb-state-id=*,task-id=*,type=stream-rocksdb-state-metrics"
    tag_keys = ["client-id","rocksdb-state-id","task-id"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "kafka.streams_stream-in-memory-lru-state-metrics"
    mbean = "kafka.streams:client-id=*,in-memory-lru-state-id=*,task-id=*,type=stream-in-memory-lru-state-metrics"
    tag_keys = ["client-id","in-memory-lru-state-id","task-id"]
    

  ##### c3-streams #####
  
  #[[inputs.jolokia2_agent.metric]]
  #  name  = "c3-streams_WindowExtractor"
  #  mbean = "c3-streams:type=WindowExtractor"
  
  #[[inputs.jolokia2_agent.metric]]
  #  name  = "c3-streams_WindowExtractor"
  #  mbean = "c3-streams:input=*,progress=*,type=WindowExtractor"
  #  tag_keys = ["input","progress"]
  
  #[[inputs.jolokia2_agent.metric]]
  #  name  = "c3-streams_WindowExtractor"
  #  mbean = "c3-streams:cluster=*,input=*,progress=*,type=WindowExtractor"
  #  tag_keys = ["cluster","input","progress"]


  [inputs.jolokia2_agent.tags]
    # Creates a tag named 'environment' with the name of the environment to which this Kafka-related component belongs.
    environment = "local"

    # Creates a tag named 'application' with the name of this Kafka-related component. This should not need to be
    # changed.
    application = "cp-control-center"

    # Replace with the name of the Control Center instance. It is recommended that this be the same as the Control
    # Center configuration option: confluent.controlcenter.name (CONTROL_CENTER_NAME)
    control_center_name = "_confluent-controlcenter-6.0.0"

    # Replace with the ID of the Control Center instance. It is recommended that this be the same as the Control
    # Center configuration option: confluent.controlcenter.id (CONTROL_CENTER_ID)
    control_center_id = "1"
